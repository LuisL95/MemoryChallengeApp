/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memorychallengeappv1.framesMCA;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Boolean.FALSE;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import static javax.swing.JOptionPane.YES_NO_CANCEL_OPTION;
import memorychallengeappv1.Bloque;
import memorychallengeappv1.Enunciado;
import memorychallengeappv1.GestionEjecucionBloque;
import memorychallengeappv1.MemoryChallengeAppV1;
import memorychallengeappv1.connections.ConnectionManager;
import memorychallengeappv1.ejemplo;
import static memorychallengeappv1.ejemplo.fp;


/**
 *
 * @author luDragon
 */
public class FrameBloque extends javax.swing.JFrame{

    public Bloque bloque = new Bloque();
    public int ySize = 550;
    public int enunciadoButtonYSize = 250; 
    public int enunciadoButtonXSize = 30;
    
    int contadorEnunciado = 0;
    public JButton bt;
    public List <JButton> listaBotones = new ArrayList<JButton>();
    public List <String> codigosEnunciadoExistentes = new ArrayList<String>();
    
 //*****VARIABLES PARA DEPOSITAR LOS VALOR DEL FRAME AL OBJETO ENUNCIADO*******   
    private String frCodigoEnunciado;
    
 //*****VARIABLES PARA DEPOSITAR LOS VALORES DEL FRAME AL OBJETO BLOQUE*********
    public String frNombre;
    long frDuracionTotal;
    long frDuracionInicial;
   
//*********OBJETO QUE GESTIONA LOS TIEMPOS DEL RETO************************    
   public GestionEjecucionBloque geb;
    /**
     * Creates new form FrameBloque
     */
    public FrameBloque() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        pTitulo = new javax.swing.JPanel();
        pCuerpo = new javax.swing.JPanel();
        lNombreBloque = new javax.swing.JLabel();
        jTextNombreBloque = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JComboBoxDuTotal = new javax.swing.JComboBox<>();
        bNuevoEnunciado = new javax.swing.JButton();
        bAceptar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        JComboBoxDuInicial = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 420, 0));
        setSize(new java.awt.Dimension(420, 400));

        pTitulo.setBackground(new java.awt.Color(0, 153, 102));

        javax.swing.GroupLayout pTituloLayout = new javax.swing.GroupLayout(pTitulo);
        pTitulo.setLayout(pTituloLayout);
        pTituloLayout.setHorizontalGroup(
            pTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        pTituloLayout.setVerticalGroup(
            pTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        pCuerpo.setBackground(new java.awt.Color(0, 102, 102));
        pCuerpo.setPreferredSize(new java.awt.Dimension(450, 246));

        lNombreBloque.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lNombreBloque.setForeground(new java.awt.Color(255, 255, 255));
        lNombreBloque.setText("Nombre del Bloque:");

        jTextNombreBloque.setBackground(new java.awt.Color(232, 230, 226));
        jTextNombreBloque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreBloqueActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Duración Total del Bloque:");

        JComboBoxDuTotal.setBackground(new java.awt.Color(232, 230, 226));
        JComboBoxDuTotal.setFont(new java.awt.Font("Segoe UI Symbol", 0, 11)); // NOI18N
        JComboBoxDuTotal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"","3 minutos",  "6 minutos", "10 minutos", "15 minutos", "30 minutos", "60 minutos", "2 horas" }));
        JComboBoxDuTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxDuTotalActionPerformed(evt);
            }
        });

        bNuevoEnunciado.setBackground(new java.awt.Color(51, 204, 255));
        bNuevoEnunciado.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bNuevoEnunciado.setText("Nuevo Enunciado");
        bNuevoEnunciado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bNuevoEnunciadoMouseClicked(evt);
            }
        });
        bNuevoEnunciado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNuevoEnunciadoActionPerformed(evt);
            }
        });

        bAceptar.setText("Aceptar");
        bAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAceptarMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tiempo de Inicio de Repetición:");

        JComboBoxDuInicial.setBackground(new java.awt.Color(232, 230, 226));
        JComboBoxDuInicial.setFont(new java.awt.Font("Segoe UI Symbol", 0, 11)); // NOI18N
        JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"","15 segundos", "30 segundos", "", "Item 3", "Item 4" }));
        JComboBoxDuInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxDuInicialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pCuerpoLayout = new javax.swing.GroupLayout(pCuerpo);
        pCuerpo.setLayout(pCuerpoLayout);
        pCuerpoLayout.setHorizontalGroup(
            pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCuerpoLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pCuerpoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JComboBoxDuInicial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pCuerpoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(JComboBoxDuTotal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pCuerpoLayout.createSequentialGroup()
                        .addComponent(lNombreBloque)
                        .addGap(18, 18, 18)
                        .addComponent(jTextNombreBloque, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pCuerpoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pCuerpoLayout.createSequentialGroup()
                        .addComponent(bNuevoEnunciado, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pCuerpoLayout.createSequentialGroup()
                        .addComponent(bAceptar)
                        .addGap(173, 173, 173))))
        );
        pCuerpoLayout.setVerticalGroup(
            pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCuerpoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNombreBloque)
                    .addComponent(jTextNombreBloque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(JComboBoxDuTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JComboBoxDuInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(bNuevoEnunciado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(bAceptar)
                .addGap(25, 25, 25))
        );

        bAceptar.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pCuerpo, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pCuerpo, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextNombreBloqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreBloqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreBloqueActionPerformed

    private void bNuevoEnunciadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNuevoEnunciadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bNuevoEnunciadoActionPerformed

//++++++++++++++++++++METODO PARA VALIDACION DE ID O CÓDIGO DEL ENUNCIADO+++++++++++++++++++++++++++++++++++++++++++++++++
     boolean validacionCodigoEnunciado()
    {
        boolean funciona = true;
        String escrituraCodigoEnunciado = JOptionPane.showInputDialog(null,"Escribe un número o código para reconocer tu enunciado: ","JEJE", YES_NO_CANCEL_OPTION);
        if(bloque.enunciados.isEmpty())
        {
            frCodigoEnunciado = escrituraCodigoEnunciado ;
             
            
        }
        else
        {
            for(int x = 0; x<bloque.enunciados.size();x++)
            {
                if(bloque.enunciados.get(x).getCodigoEnunciado().equals(escrituraCodigoEnunciado))
                {
                JOptionPane.showMessageDialog(null, "Este número o código de referencia ya se usó para otro enunciado", "Intente otro codigo", 3);
                funciona = false;
                }
                else 
                {
                     frCodigoEnunciado = escrituraCodigoEnunciado ;
                     
                }
            } 
        }
           return funciona;
    }
    
    public void JOptionCrearPregunta ()
    {

        
   
        
   
      JPanel p1 = new JPanel();
      p1.setBounds(30, 30, 600, 300);
      
      

       JTextArea ta1 = new JTextArea();
          ta1.setColumns(30);
          ta1.setRows(10);
          ta1.setLineWrap(true);
          ta1.setWrapStyleWord(true);
            

            p1.add(ta1);
//+++++++++++++++ESCRITURA DE  LA PREGUNTA A RESPONDER++++++++++++++++++++++++++++++++++++++++++++   

      int input1 = JOptionPane.showConfirmDialog
        (null, p1, "Escribe la PREGUNTA a responder", JOptionPane.INFORMATION_MESSAGE);
         if(input1 ==JOptionPane.OK_OPTION)
         {
             if(ta1.getText().equals(""))
             {
                 JOptionPane.showMessageDialog(null, "No escribiste nada");
             }
             else
             {
                 /*
                 
  *********************CREACION DE OBJETO ENUNCIADO ***********************************
                 */
                 Enunciado enunciadoNuevo = new Enunciado();
                 enunciadoNuevo.setCodigoEnunciado(frCodigoEnunciado);
                 enunciadoNuevo.setPregunta(ta1.getText());
                 JPanel p2 = new JPanel();
                 p2.setBounds(30, 30, 600, 300);
       
                 JTextArea ta2 = new JTextArea();
                 ta2.setColumns(30);
                 ta2.setRows(10);
                 ta2.setLineWrap(true);
                 ta2.setWrapStyleWord(true);
                 p2.add(ta2);
  //+++++++++++++++ESCRITURA DE  LA RESPUESTA A RESPONDER++++++++++++++++++++++++++++++++++++++++++++   
  
                 int input2 =  JOptionPane.showConfirmDialog
                 (null, p2, "Escribe la RESPUESTA de tu pregunta", JOptionPane.INFORMATION_MESSAGE);
                     if(input2 == JOptionPane.OK_OPTION)
                     {
                         
                         if(ta2.getText().equals(""))
                         {
                            JOptionPane.showMessageDialog(null, "No escribiste nada");
                            Color colorInicial = new Color(51,204,255);
                            bNuevoEnunciado.setBackground(colorInicial);
                         }
                         else
                         {
                             enunciadoNuevo.setRespuesta(ta2.getText());
  //++++++++++++++++++++CREACION DE BOTON ++++++++++++++++++++++++++++++++++
                              bt = new JButton();
                             contadorEnunciado++;
                             if(enunciadoButtonXSize<=290 )
                                 
                             {
                                bt.setBounds(enunciadoButtonXSize, enunciadoButtonYSize , 100, 30);
                                
                             }
                             else
                             { 
                                 enunciadoButtonXSize = 30;
                                 enunciadoButtonYSize =  enunciadoButtonYSize + 50;
                                 bt.setBounds(enunciadoButtonXSize, enunciadoButtonYSize , 100, 30);
                                 
                                 
                                // pCuerpoYSize = pCuerpoYSize+ 50;
                               this.setSize(436,ySize);
                               ySize = ySize+50;
                              // pCuerpo.setSize(420,pCuerpoYSize);
                               
                             }
                            enunciadoButtonXSize =enunciadoButtonXSize+130;
                            
                            bt.setName("enunciado");
                            
                            
                            pCuerpo.add(bt);
                            this.validate();
                            bt.setVisible(rootPaneCheckingEnabled);
                            Color color = new Color(0,153,102);
                            bt.setBackground(color);
                            bt.setLabel(enunciadoNuevo.getCodigoEnunciado());
                            bt.setFont(new Font("Times New Roman", Font.PLAIN, 13));
                             Color colorFore = new Color(214, 234, 248);
                            bt.setForeground(colorFore);
                            listaBotones.add(bt);
  //+++++++++++++++++++AGREGACIÓN DE ENUNCIADO AL BLOQUE+++++++++++++++++++++++++++++++
                            bloque.enunciados.add(enunciadoNuevo);
                            
                            
                            Color colorInicial = new Color(51,204,255);
                            bNuevoEnunciado.setBackground(colorInicial);
                             System.out.println(enunciadoNuevo.toString());
                             
                             
                             bt.addActionListener(new ActionListener() 
                             {

                                @Override
                                    public void actionPerformed(ActionEvent e)
                                    {
                                        FrameEnunciado frameEnunciado = new FrameEnunciado(enunciadoNuevo.getCodigoEnunciado());
                                        frameEnunciado.setVisible(true);
                                       frameEnunciado.textAreaPregunta.setText(enunciadoNuevo.getPregunta());
                                       frameEnunciado.textAreaRespuesta.setText(enunciadoNuevo.getRespuesta());
                                    }

                                
                               });
                             
                           
                         }
                     }
             }
             
         }
    }
    
    
    private void bNuevoEnunciadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bNuevoEnunciadoMouseClicked
        // TODO add your handling code here:
        
        
     
      
       
        Color color = new Color(178,34,34);
        bNuevoEnunciado.setBackground(color);
          // this.returnPregunta();
          
       
       
      if(contadorEnunciado <9)
        {
            boolean validar = this.validacionCodigoEnunciado();
             if(validar == true)
             {
                 
                 this.JOptionCrearPregunta();
                 System.out.println(bloque.enunciados.size());
             }
             
             
           
        }
      else
      {
       JOptionPane.showMessageDialog(null, "Sólo pueden crearse 9 enunciados");
      }

        bAceptar.setVisible(false);
        if (contadorEnunciado >0)
        {
         bAceptar.setVisible(true);
        }
        
        
    
     
   
    }//GEN-LAST:event_bNuevoEnunciadoMouseClicked
//++++++++++++++++++++++MÉTODO PARA CONVERTIR LA DURACION TOTAL AGREGADA DEL FRAME O TIPO LONG PARA EL BLOQUE++++++++++++++++++

   
    long duracionTotal()
    {
        String[] min3 = {"","15 segundos", "30 segundos"};
        String[] min6 = {"","15 segundos", "30 segundos", "1 minuto"};
        String[] min10 = {"","15 segundos", "30 segundos", "1 minuto", "2 minutos"};
        String[] min15 = {"","15 segundos", "30 segundos", "1 minuto", "2 minutos", "4 minutos"};
        String[] min30 = {"","15 segundos", "30 segundos", "1 minuto", "2 minutos", "4 minutos", "10 minutos"};
        String[] min60 = {"","15 segundos", "30 segundos", "1 minuto",
                          "2 minutos", "4 minutos", "10 minutos","15 minutos"};
        String[] horas2 = {"","15 segundos", "30 segundos", "1 minuto",
            "2 minutos", "4 minutos", "10 minutos", "15 minutos", "30 minutos"};
        
        if(this.JComboBoxDuTotal.getSelectedItem().toString().equals("3 minutos"))
           {
               frDuracionTotal = 180000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min3));

           } 
          else if(this.JComboBoxDuTotal.getSelectedItem().toString().equals("6 minutos"))
           {
               frDuracionTotal = 360000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min6));

           } 
           else if (this.JComboBoxDuTotal.getSelectedItem().toString().equals("10 minutos"))
           {
               frDuracionTotal = 600000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min10));
           }
           else if (this.JComboBoxDuTotal.getSelectedItem().toString().equals("15 minutos"))
           {
               frDuracionTotal = 900000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min15));
           }
            else if (this.JComboBoxDuTotal.getSelectedItem().toString().equals("30 minutos"))
           {
               frDuracionTotal = 1800000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min30));
           }
             else if (this.JComboBoxDuTotal.getSelectedItem().toString().equals("60 minutos"))
           {
               frDuracionTotal = 3600000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(min60));
           }
              else if (this.JComboBoxDuTotal.getSelectedItem().toString().equals("2 horas"))
           {
               frDuracionTotal = 7200000;
               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(horas2));
           }
           else 
           {

               JComboBoxDuInicial.setModel(new javax.swing.DefaultComboBoxModel<>(new String []{""}));
           }
      return frDuracionTotal;    
    }  
    
//++++++++++++++++++++++MÉTODO PARA CONVERTIR LA DURACION INICIAL AGREGADA DEL FRAME O TIPO LONG PARA EL BLOQUE++++++++++++++++++
    
    long duracionInicial()
    {
          if(this.JComboBoxDuInicial.getSelectedItem().equals("15 segundos"))
          {
              frDuracionInicial = 15000;

          }
        
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("30 segundos"))
          {
              frDuracionInicial = 30000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("1 minuto"))
          {
              frDuracionInicial = 60000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("2 minutos"))
          {
              frDuracionInicial = 120000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("4 minutos"))
          {
              frDuracionInicial = 240000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("10 minutos"))
          {
              frDuracionInicial = 600000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("15 minutos"))
          {
              frDuracionInicial = 900000;

          }
          else if(this.JComboBoxDuInicial.getSelectedItem().equals("30 minutos"))
          {
              frDuracionInicial = 1800000;

          }
          
          else
          {
              
          }
          return frDuracionInicial;
    }
    
    
//************************************BOTON DE ACEPTAR**********************************************+
    private void bAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAceptarMouseClicked
        
        
       if(this.jTextNombreBloque.getText().equals(""))
       {
       JOptionPane.showMessageDialog(null,"Hace falta que agregues un nombre al bloque" , "Faltan datos", 2);
       
       }
       else if(this.JComboBoxDuTotal.getSelectedItem().toString()=="")
       {
         JOptionPane.showMessageDialog(null,"Hace falta que agregues una duaración total al bloque" , "Faltan datos", 2);
       }
       else if(this.JComboBoxDuInicial.getSelectedItem().toString()=="")
       {
         JOptionPane.showMessageDialog(null,"Hace falta que agregues una duaración inicial de repetición al bloque" , "Faltan datos", 2);
       }
       else
       {
//++++++++++++++++++++++++++++++++AGREGACIÓN DE DATOS GENERALES DEL FRAME AL BLOQUE++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        new Thread() 
        {
            public void run() 
            {
                frNombre = jTextNombreBloque.getText();

                bloque.setNombre(frNombre);
                bloque.setDuracionTotal(frDuracionTotal);
                bloque.setDuracionInicial(frDuracionInicial);

                System.out.println("Nombre: "+bloque.getNombre());
                System.out.println("duración total: "+bloque.getDuracionTotal());
                System.out.println("duración inicial: "+bloque.getDuracionInicial());

                Bloque.bloques.add(bloque);



                ejemplo.fp.jButtonParar.setVisible(true);
                ejemplo.fp.jLabelNumeroBloques.setText("Bloques existentes: " + Bloque.bloques.size() );
                ejemplo.fp.jLabelNumeroBloques.setVisible(true);



        //------------------------- SENTENCIAS CREACION REGISTROS BLOQUE Y ENUNCIADO-------------------------

          //+++++++iNSERSION DE BLOQUE A TABLA BLOQUE+++++++++++++++++++
                try (
                        Connection conn = ConnectionManager.getConnection();
                        Statement stmt = conn.createStatement();


                       ){
                   int rs = stmt.executeUpdate(
                        "INSERT INTO db_memorychallengeapp.table_bloque(nombre,duracion_total,duracion_inicial,estado)"
                                + " VALUES("+"'"+bloque.getNombre()+"',"+bloque.getDuracionTotal()+","+bloque.getDuracionInicial()+","+1+")");

           //+++++++iNSERSION DE ENUNCIADO A TABLA ENUNCIADO+++++++++++++++++++
                    for( Enunciado e: bloque.enunciados)
                    {		
                        rs = stmt.executeUpdate(


                           "INSERT INTO db_memorychallengeapp.table_enunciado(ID_BLOQUE_E,COD_ENUNCIADO,pregunta, respuesta)"
                                   + " VALUES((SELECT distinct (LAST_INSERT_ID()) FROM db_memorychallengeapp.table_bloque),'"
                                   +e.getCodigoEnunciado()+
                                   "',"+"'"+e.getPregunta()+
                                   "',"+"'"+e.getRespuesta()+"'"+")");


                    }
                //+++++++++++AGREGACION DE ID GENERADO EN LA BD A VARIABLE ID DE BLOQUE+++++++++++++++++++  

                       ResultSet idGenerado = stmt.executeQuery(
                        "SELECT   (LAST_INSERT_ID()) FROM  db_memorychallengeapp.table_bloque");
                       if(idGenerado.next())
                       {
                        bloque.setID(Integer.parseInt(idGenerado.getString(1)));
                       }


                   System.out.println("id generado: "+bloque.getID());}
                catch (SQLException e) 
                        {
                            ConnectionManager.processException(e);
                        } 





         //++++++++++++++++++++++++++++++ACTIVACION DE LA REITERACION DE PREGUNTAS+++++++++++++++++++++++++++++++++++
                geb = new GestionEjecucionBloque(bloque);
                geb.start();

                         
                                       
            }
        }.start();

           this.dispose();
       }
    }//GEN-LAST:event_bAceptarMouseClicked

 
  //++++++++++++++++++++++++++++ACCION AL MOVERLE AL JCOMBO BOX DE DURACIÓN TOTAL+++++++++++++++++++++++++++++++++++++++++++++++++++
    private void JComboBoxDuTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxDuTotalActionPerformed
        
        duracionTotal();
    
        
    }//GEN-LAST:event_JComboBoxDuTotalActionPerformed
 
   //++++++++++++++++++++++++++++ACCION AL MOVERLE AL JCOMBO BOX DE DURACIÓN INICIAL+++++++++++++++++++++++++++++++++++++++++++++++++++  
    private void JComboBoxDuInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxDuInicialActionPerformed
   
        duracionInicial();
    }//GEN-LAST:event_JComboBoxDuInicialActionPerformed


    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameBloque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameBloque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameBloque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameBloque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameBloque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComboBoxDuInicial;
    private javax.swing.JComboBox<String> JComboBoxDuTotal;
    private javax.swing.JButton bAceptar;
    private javax.swing.JButton bNuevoEnunciado;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextNombreBloque;
    private javax.swing.JLabel lNombreBloque;
    private javax.swing.JPanel pCuerpo;
    private javax.swing.JPanel pTitulo;
    // End of variables declaration//GEN-END:variables
}
